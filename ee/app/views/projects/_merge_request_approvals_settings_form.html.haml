- can_override_approvers = project.can_override_approvers?

.form-group
  = form.label :approver_ids, class: 'label-bold' do
    = _("Add approvers")
  #js-mr-approvals-settings{ data: { 'project_id': @project.id,
    'project_path': expose_path(api_v4_projects_path(id: @project.id)),
    'settings_path': expose_path(api_v4_projects_approval_settings_path(id: @project.id)),
    'rules_path': expose_path(api_v4_projects_approval_settings_rules_path(id: @project.id)),
    'allow_multi_rule': @project.multiple_approval_rules_available?.to_s } }
    .text-center.prepend-top-default
      = sprite_icon('spinner', size: 24, css_class: 'gl-spinner')

- if project.code_owner_approval_required_available?
  .form-group.require-code-owner-approval
    .form-check
      = form.check_box(:merge_requests_require_code_owner_approval, class: 'form-check-input qa-require-code-owners-approval-checkbox')
      = form.label :merge_requests_require_code_owner_approval, class: 'form-check-label' do
        %span= _('Require approval from code owners')
        = link_to icon('question-circle'), help_page_path('user/project/merge_requests/merge_request_approvals', anchor: 'editing-approvals-premium'), target: '_blank'

.form-group
  .form-check
    = form.check_box(:disable_overriding_approvers_per_merge_request, { checked: can_override_approvers, class: 'form-check-input' }, false, true)
    = form.label :disable_overriding_approvers_per_merge_request, class: 'form-check-label' do
      %span= _('Can override approvers and approvals required per merge request')
      = link_to icon('question-circle'), help_page_path('user/project/merge_requests/merge_request_approvals', anchor: 'overriding-the-merge-request-approvals-default-settings'), target: '_blank'

.form-group.reset-approvals-on-push
  .form-check
    = form.check_box :reset_approvals_on_push, class: 'form-check-input'
    = form.label :reset_approvals_on_push, class: 'form-check-label' do
      %span= _('Remove all approvals in a merge request when new commits are pushed to its source branch')

.form-group.self-approval
  .form-check
    = form.check_box :merge_requests_author_approval, { class: 'form-check-input', checked: !project.merge_requests_author_approval? }, false, true
    = form.label :merge_requests_author_approval, class: 'form-check-label' do
      %span= _('Prevent approval of merge requests by merge request author')
      = link_to icon('question-circle'), help_page_path('user/project/merge_requests/merge_request_approvals',
        anchor: 'allowing-merge-request-authors-to-approve-their-own-merge-requests'), target: '_blank'

.form-group.committers-approval
  .form-check
    = form.check_box :merge_requests_disable_committers_approval, class: 'form-check-input'
    = form.label :merge_requests_disable_committers_approval, class: 'form-check-label' do
      %span= _('Prevent approval of merge requests by merge request committers')
      = link_to icon('question-circle'), help_page_path('user/project/merge_requests/merge_request_approvals',
        anchor: 'allowing-merge-request-authors-to-approve-their-own-merge-requests'), target: '_blank'

- if password_authentication_enabled_for_web?
  .form-group.self-approval
    .form-check
      = form.check_box :require_password_to_approve, class: 'form-check-input'
      = form.label :require_password_to_approve, class: 'form-check-label' do
        %span= _('Require user password to approve')
        = link_to icon('question-circle'), help_page_path('user/project/merge_requests/merge_request_approvals',
          anchor: 'require-authentication-when-approving-a-merge-request-starter'), target: '_blank'
