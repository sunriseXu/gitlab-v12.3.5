%section.saml_provider#js-saml-settings-form.prepend-top-default
  = form_for [group, saml_provider], url: group_saml_providers_path do |f|
    .form-group
      = form_errors(saml_provider)
      %label.toggle-wrapper.mb-0.js-group-saml-enabled-toggle-area
        %button{ type: 'button',
          class: "js-project-feature-toggle project-feature-toggle d-inline #{'is-checked' if saml_provider.enabled?}",
          "aria-label": s_("GroupSAML|Toggle SAML authentication") }
          = f.hidden_field :enabled, { class: 'js-group-saml-enabled-input js-project-feature-toggle-input'}
          %span.toggle-icon
            = sprite_icon('status_success_borderless', size: 16, css_class: 'toggle-icon-svg toggle-status-checked')
            = sprite_icon('status_failed_borderless', size: 16, css_class: 'toggle-icon-svg toggle-status-unchecked')
        %span.d-inline.font-weight-normal.align-text-bottom.ml-3= s_('GroupSAML|Enable SAML authentication for this group.')
    - if Feature.enabled?(:enforced_sso, group)
      .form-group
        %label.toggle-wrapper.mb-0.js-group-saml-enforced-sso-toggle-area
          %button{ type: 'button',
            class: "js-project-feature-toggle js-group-saml-enforced-sso-toggle project-feature-toggle d-inline qa-enforced-sso-toggle-button #{'is-checked' if saml_provider.enforced_sso?}",
            "aria-label": s_("GroupSAML|Enforced SSO") }
            = f.hidden_field :enforced_sso, { class: 'js-group-saml-enforced-sso-input js-project-feature-toggle-input'}
            %span.toggle-icon
              = sprite_icon('status_success_borderless', size: 16, css_class: 'toggle-icon-svg toggle-status-checked')
              = sprite_icon('status_failed_borderless', size: 16, css_class: 'toggle-icon-svg toggle-status-unchecked')
            - sso_enforcement_text = Feature.enabled?(:enforced_sso_requires_session, group) ? s_('GroupSAML|Enforce SSO-only authentication for this group.') : s_('GroupSAML|Enforce SSO-only membership for this group.')
          %span.form-text.d-inline.font-weight-normal.align-text-bottom.ml-3= sso_enforcement_text
        .form-text.text-muted.js-group-saml-enforced-sso-helper-text{ style: "display: #{'none' if saml_provider.enabled?} #{'block' unless saml_provider.enabled?}" }
          %span
            = s_('GroupSAML|To be able to enable enforced SSO, you first need to enable SAML authentication.')
    - if Feature.enabled?(:group_managed_accounts, group)
      .form-group
        %label.toggle-wrapper.mb-0.js-group-saml-enforced-group-managed-accounts-toggle-area
          %button{ type: 'button',
            class: "js-project-feature-toggle js-group-saml-enforced-group-managed-accounts-toggle project-feature-toggle d-inline #{'is-checked' if saml_provider.enforced_group_managed_accounts?}",
            "aria-label": s_("GroupSAML|Enforced SSO") }
            = f.hidden_field :enforced_group_managed_accounts, { class: 'js-group-saml-enforced-group-managed-accounts-input js-project-feature-toggle-input'}
            %span.toggle-icon
              = sprite_icon('status_success_borderless', size: 16, css_class: 'toggle-icon-svg toggle-status-checked')
              = sprite_icon('status_failed_borderless', size: 16, css_class: 'toggle-icon-svg toggle-status-unchecked')
          %span.form-text.d-inline.font-weight-normal.align-text-bottom.ml-3= s_('GroupSAML|Enforce users to have dedicated group managed accounts for this group.')
        .form-text.text-muted.js-group-saml-enforced-group-managed-accounts-helper-text{ style: "display: #{'none' if saml_provider.enforced_sso?} #{'block' unless saml_provider.enforced_sso?}" }
          %span
            = s_('GroupSAML|To be able to enable group managed accounts, you first need to enable enforced SSO.')
        .bs-callout.bs-callout-info.js-group-saml-enforced-group-managed-accounts-callout{ style: "display: #{'block' if saml_provider.enforced_sso?} #{'none' unless saml_provider.enforced_sso?}" }
          = s_('GroupSAML|With group managed accounts enabled, all the users without a group managed account will be excluded from the group.')
    .well-segment.borderless.mb-3.col-12.col-lg-9.p-0
      = f.label :sso_url, class: 'label-bold' do
        = s_('GroupSAML|Identity provider single sign on URL')
      = f.text_field :sso_url, placeholder: 'e.g. https://example.com/adfs/ls', class: 'form-control qa-identity-provider-sso-field'
      .form-text.text-muted
        = s_('GroupSAML|Members will be forwarded here when signing in to your group. Get this from your identity provider, where it can also be called "SSO Service Location", "SAML Token Issuance Endpoint", or "SAML 2.0/W-Federation URL".')

    .well-segment.borderless.mb-3.col-12.col-lg-9.p-0
      = f.label :certificate_fingerprint, class: 'label-bold' do
        = s_('GroupSAML|Certificate fingerprint')
      = f.text_field :certificate_fingerprint, placeholder: 'e.g. 0a:1b:2c:3d:00:11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff', class: 'form-control qa-certificate-fingerprint-field'
      .form-text.text-muted
        = s_('GroupSAML|SHA1 fingerprint of the SAML token signing certificate. Get this from your identity provider, where it can also be called "Thumbprint".')

    .mt-3
      = f.submit _("Save changes"), class: 'btn btn-success qa-save-changes-button'
      #js-saml-test-button.has-tooltip.pull-right
        = render 'test_button', saml_provider: @saml_provider
