- page_title _('SAML SSO for %{group_name}') % { group_name: @group_name }

.login-box.rounded
  .login-body
    = form_for(resource, as: "new_user", url: group_sign_up_path(@unauthenticated_group), html: { class: "new_new_user gl-show-field-errors", "aria-live" => "assertive" }) do |f|
      .devise-errors
        = devise_error_messages!
      .d-flex.flex-column.align-items-center.mt3.mx3
        .avatar-container.rect-avatar.s64.home-panel-avatar.mb-3
          = group_icon(@unauthenticated_group, class: 'avatar avatar-tile s64', width: 64, height: 64)
        %p.text-center
          = (_("Finish setting up your dedicated account for <strong>%{group_name}</strong>.") % { group_name: @group_name }).html_safe
      .form-group
        = f.label :email, class: 'label-bold'
        = f.email_field :email, class: "form-control qa-new-user-email", required: true, disabled: true
      .name.form-group
        = f.label :name, _('Full name'), class: 'label-bold'
        = f.text_field :name, class: "form-control top qa-new-user-name js-block-emoji", required: true, disabled: resource.name.present?
      .username.form-group
        = f.label :username, class: 'label-bold'
        = f.text_field :username, class: "form-control qa-new-user-username js-block-emoji", pattern: Gitlab::PathRegex::NAMESPACE_FORMAT_REGEX_JS, required: true, title: _("Please create a username with only alphanumeric characters.")
        %p.validation-error.hide= _('Username is already taken.')
        %p.validation-success.hide= _('Username is available.')
        %p.validation-pending.hide= _('Checking username availability...')
      - if Gitlab::CurrentSettings.current_application_settings.enforce_terms?
        .form-group
          = check_box_tag :terms_opt_in, '1', false, required: true, class: 'qa-new-user-accept-terms'
          = label_tag :terms_opt_in do
            - terms_link = link_to s_("I accept the|Terms of Service and Privacy Policy"), terms_path, target: "_blank"
            - accept_terms_label = _("I accept the %{terms_link}") % { terms_link: terms_link }
            = accept_terms_label.html_safe
      = render_if_exists 'devise/shared/email_opted_in', f: f
      - if current_user
        %p.text-center= _("You'll be signed out from your current account automatically.")
        .d-flex.justify-content-center
          = render 'user_info'
        .submit-container
          = f.submit _("Sign out & Register"), class: "btn-register btn qa-new-user-register-button"
      - else
        .submit-container
          = f.submit _("Register"), class: "btn-register btn qa-new-user-register-button"
