- return unless License.feature_available?(:elastic_search)

- recreate_index_url = help_page_url('integration/elasticsearch.md')
- recreate_index_link_start = '<a href="%{url}" target="_blank" rel="noopener noreferrer">'.html_safe % { url: recreate_index_url }
- recreate_index_text = s_("Changes won't take place until the index is %{link_start}recreated%{link_end}.").html_safe % { link_start: recreate_index_link_start, link_end: '</a>'.html_safe }

%section.settings.as-elasticsearch.no-animate#js-elasticsearch-settings{ class: ('expanded' if expanded), data: { qa_selector: 'elasticsearch_tab' } }
  .settings-header
    %h4
      = _('Elasticsearch')
    %button.btn.js-settings-toggle{ type: 'button' }
      = expanded ? 'Collapse' : 'Expand'
    %p
      = _('Elasticsearch integration. Elasticsearch AWS IAM.')
  .settings-content

    = form_for @application_setting, url: admin_application_settings_path(anchor: 'js-elasticsearch-settings'), html: { class: 'fieldset-form' } do |f|
      = form_errors(@application_setting)

      %fieldset
        .sub-section
          .form-group
            .form-check
              = f.check_box :elasticsearch_indexing, class: 'form-check-input', data: { qa_selector: 'indexing_checkbox' }
              = f.label :elasticsearch_indexing, class: 'form-check-label' do
                Elasticsearch indexing

              - if Feature.enabled?(:elasticsearch_web_indexing, default_enabled: true) && Gitlab::CurrentSettings.elasticsearch_indexing?
                .form-text
                  = link_to _('Index all projects'), admin_elasticsearch_enqueue_index_path,
                      class: 'btn btn-success', method: :post

          .form-group
            .form-check
              = f.check_box :elasticsearch_search, class: 'form-check-input', data: { qa_selector: 'search_checkbox' }
              = f.label :elasticsearch_search, class: 'form-check-label' do
                Search with Elasticsearch enabled

          .form-group
            = f.label :elasticsearch_url, 'URL', class: 'label-bold'
            = f.text_field :elasticsearch_url, value: @application_setting.elasticsearch_url.join(', '), class: 'form-control', placeholder: 'http://localhost:9200', data: { qa_selector: 'url_field' }
            .form-text.text-muted
              The URL to use for connecting to Elasticsearch. Use a comma-separated list to support clustering (e.g., "http://localhost:9200, http://localhost:9201").

          .form-group
            = f.label :elasticsearch_shards, _('Number of Elasticsearch shards'), class: 'label-bold'
            = f.number_field :elasticsearch_shards, value: @application_setting.elasticsearch_shards, class: 'form-control'
            .form-text.text-muted
              = _('How many shards to split the Elasticsearch index over.')
              = recreate_index_text

          .form-group
            = f.label :elasticsearch_replicas, _('Number of Elasticsearch replicas'), class: 'label-bold'
            = f.number_field :elasticsearch_replicas, value: @application_setting.elasticsearch_replicas, class: 'form-control'
            .form-text.text-muted
              = _('How many replicas each Elasticsearch shard has.')
              = recreate_index_text

        .sub-section
          %h4= _('Elasticsearch indexing restrictions')
          .form-group
            .form-check
              = f.check_box :elasticsearch_limit_indexing, class: 'form-check-input js-limit-checkbox'
              = f.label :elasticsearch_limit_indexing, class: 'form-check-label' do
                = _('Limit namespaces and projects that can be indexed')

          .form-group.js-limit-namespaces{ class: ('hidden' unless @application_setting.elasticsearch_limit_indexing) }
            = f.label :elasticsearch_namespace_ids, _('Namespaces to index'), class: 'label-bold'
            = f.text_field :elasticsearch_namespace_ids, class: 'js-elasticsearch-namespaces', value: elasticsearch_namespace_ids, data: { selected: elasticsearch_objects_options(@application_setting.elasticsearch_limited_namespaces(true)).to_json }

          .form-group.js-limit-projects{ class: ('hidden' unless @application_setting.elasticsearch_limit_indexing) }
            = f.label :elasticsearch_project_ids, _('Projects to index'), class: 'label-bold'
            = f.text_field :elasticsearch_project_ids, class: 'js-elasticsearch-projects', value: elasticsearch_project_ids, data: { selected: elasticsearch_objects_options(@application_setting.elasticsearch_limited_projects(true)).to_json }

        .sub-section
          %h4 Elasticsearch AWS IAM credentials
          .form-group
            .form-check
              = f.check_box :elasticsearch_aws, class: 'form-check-input'
              = f.label :elasticsearch_aws, class: 'form-check-label' do
                Using AWS hosted Elasticsearch with IAM credentials
          .form-group
            = f.label :elasticsearch_aws_region, 'AWS region', class: 'label-bold'
            = f.text_field :elasticsearch_aws_region, value: @application_setting.elasticsearch_aws_region, class: 'form-control'
            .form-text.text-muted
              Region that elasticsearch is configured

          .form-group
            = f.label :elasticsearch_aws_access_key, 'AWS Access Key', class: 'label-bold'
            = f.text_field :elasticsearch_aws_access_key, value: @application_setting.elasticsearch_aws_access_key, class: 'form-control'
            .form-text.text-muted
              AWS Access Key.  Only required if not using role instance credentials

          .form-group
            = f.label :elasticsearch_aws_secret_access_key, 'AWS Secret Access Key', class: 'label-bold'
            = f.password_field :elasticsearch_aws_secret_access_key, value: @application_setting.elasticsearch_aws_secret_access_key, class: 'form-control'
            .form-text.text-muted
              AWS Secret Access Key.  Only required if not using role instance credentials

      = f.submit 'Save changes', class: "btn btn-success", data: { qa_selector: 'submit_button' }
